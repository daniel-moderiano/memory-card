{"version":3,"sources":["images/mario.png","images/bowser.png","images/diddy.png","images/fox.png","images/ike.png","images/isabelle.png","images/link.png","images/luigi.png","images/peach.png","images/wario.png","images/joker.png","images/dk.png","components/Card.js","components/Scoreboard.js","App.js","index.js"],"names":["Card","props","className","onClick","handleClick","name","src","alt","toUpperCase","Scoreboard","best","current","App","useState","mario","id","nanoid","clicked","dk","bowser","diddy","fox","ike","isabelle","luigi","link","peach","wario","joker","characters","setCharacters","currentScore","setCurrentScore","bestScore","setBestScore","useEffect","Object","keys","length","alert","handleCardClick","characterName","newState","forEach","character","markAllCharactersAsUnclicked","markCharacterAsClicked","array","randomIndex","currentIndex","Math","floor","random","shuffleArray","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dbed2eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mario.ec02cc8b.png\";","export default __webpack_public_path__ + \"static/media/bowser.2f2ab888.png\";","export default __webpack_public_path__ + \"static/media/diddy.2fe8b49b.png\";","export default __webpack_public_path__ + \"static/media/fox.851c077e.png\";","export default __webpack_public_path__ + \"static/media/ike.43813db5.png\";","export default __webpack_public_path__ + \"static/media/isabelle.60c1d3e4.png\";","export default __webpack_public_path__ + \"static/media/link.5dbb2c05.png\";","export default __webpack_public_path__ + \"static/media/luigi.487fbe69.png\";","export default __webpack_public_path__ + \"static/media/peach.173a5f55.png\";","export default __webpack_public_path__ + \"static/media/wario.f0a3e572.png\";","export default __webpack_public_path__ + \"static/media/joker.0fd95c93.png\";","export default __webpack_public_path__ + \"static/media/dk.cbf38d58.png\";","\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card\" onClick={() => {props.handleClick(props.name)}}>\r\n      <div className=\"card__container\">\r\n        <img src={props.src} alt={props.name} className=\"card__img\" />\r\n      </div>\r\n      <h2 className=\"card__title\">{props.name.toUpperCase()}</h2>\r\n    </div>\r\n  );\r\n}\r\n","\r\nexport const Scoreboard = (props) => {\r\n  return (\r\n    <div className=\"scoreboard\">\r\n      <div className=\"scoreboard__best\">Best score: {props.best}</div>\r\n      <div className=\"scoreboard__current\">Current score: {props.current}</div>\r\n    </div>\r\n  )\r\n}\r\n","import './styles/reset.css';\nimport './styles/App.css';\n\nimport mario from './images/mario.png';\nimport bowser from './images/bowser.png';\nimport diddy from './images/diddy.png';\nimport fox from './images/fox.png';\nimport ike from './images/ike.png';\nimport isabelle from './images/isabelle.png';\nimport link from './images/link.png';\nimport luigi from './images/luigi.png';\nimport peach from './images/peach.png';\nimport wario from './images/wario.png';\nimport joker from './images/joker.png';\nimport dk from './images/dk.png';\n\nimport { Card } from './components/Card';\nimport { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Scoreboard } from './components/Scoreboard';\n\n\nfunction App() {\n\n  const [characters, setCharacters] = useState({\n    mario: {\n      id: nanoid(),\n      clicked: false,\n      src: mario,\n    },\n    'donkey kong': {\n      id: nanoid(),\n      clicked: false,\n      src: dk,\n    },\n    bowser: {\n      id: nanoid(),\n      clicked: false,\n      src: bowser,\n    },\n    'diddy kong': {\n      id: nanoid(),\n      clicked: false,\n      src: diddy,\n    },\n    fox: {\n      id: nanoid(),\n      clicked: false,\n      src: fox,\n    },\n    ike: {\n      id: nanoid(),\n      clicked: false,\n      src: ike,\n    },\n    isabelle: {\n      id: nanoid(),\n      clicked: false,\n      src: isabelle,\n    },\n    luigi: {\n      id: nanoid(),\n      clicked: false,\n      src: luigi,\n    },\n    link: {\n      id: nanoid(),\n      clicked: false,\n      src: link,\n    },\n    peach: {\n      id: nanoid(),\n      clicked: false,\n      src: peach,\n    },\n    wario: {\n      id: nanoid(),\n      clicked: false,\n      src: wario,\n    },\n    joker: {\n      id: nanoid(),\n      clicked: false,\n      src: joker,\n    }\n  });\n\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  // Optionally handle the scenario where the player successfully 'completes' the game \n  useEffect(() => {\n    if (currentScore === (Object.keys(characters)).length) {\n      alert('Max score reached, well done! Press any character card to restart');\n    }\n  });\n\n  const markCharacterAsClicked = (characterName) => {\n    setCharacters({\n      ...characters, \n      [characterName]: { ...characters[characterName], clicked: true } });\n  }\n\n  const markAllCharactersAsUnclicked = () => {\n    const newState = { ...characters };\n    Object.keys(characters).forEach((character) => newState[character].clicked = false);\n    setCharacters(newState);\n  }\n\n  const calculateBestScore = () => {\n    if (currentScore >= bestScore) {\n      setBestScore(bestScore + 1);\n    }\n  }\n\n  const handleCardClick = (characterName) => {\n    if (characters[characterName].clicked) {\n      setCurrentScore(0);\n      markAllCharactersAsUnclicked();\n    } else {\n      markCharacterAsClicked(characterName);\n      setCurrentScore(currentScore + 1);\n      calculateBestScore();\n    }\n  }\n\n  // From Mike Bostock https://bost.ocks.org/mike/shuffle - implementation of Fisher Yates Shuffle in JS\n  function shuffleArray(array) {\n    let currentIndex = array.length, randomIndex;\n\n    // While there remain elements to shuffle\n    while (currentIndex !== 0) {\n      // Pick a remaining element\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n\n    }\n    return array;\n  }\n\n  // Randomly shuffle the characters in the state. Because this function is returned by App.js, it will be re-rendered/run on each click, enabling shuffling of cards on each click\n  const shuffleCharacterCards = () => {\n    const shuffledCharacters = shuffleArray(Object.keys(characters));\n    \n    return shuffledCharacters.map((character) => (<Card key={characters[character].id} name={character} handleClick={handleCardClick} src={characters[character].src} />));\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1 className=\"header__title\">Memory Game</h1>\n        <Scoreboard best={bestScore} current={currentScore}/>\n      </header>\n      <main className=\"main\">\n        <div className=\"instructions\">Increase your score by clicking on an image, but if you click the same image twice, it's game over!</div>\n        <div className=\"container\">\n          {shuffleCharacterCards()}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}